{{- $minio_access_key := pluck .Values.global.env .Values.app.s3.access_key  | first | default .Values.app.s3.access_key._default }}
{{- $minio_secret_key := pluck .Values.global.env .Values.app.s3.secret_key  | first | default .Values.app.s3.secret_key._default }}
{{- $minio_port := pluck .Values.global.env .Values.app.s3.port  | first | default .Values.app.s3.port._default | int64 }}
{{- $minio_ep := pluck .Values.global.env .Values.app.s3.host  | first | default .Values.app.s3.host._default }}
{{- $minio_bucket := printf "default/%s" (pluck .Values.global.env .Values.app.s3.bucket  | first | default .Values.app.s3.bucket._default) }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Chart.Name }}-bucket-create-job
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "1"
spec:
  backoffLimit: 1
  activeDeadlineSeconds: 600
  template:
    metadata:
      name: {{ .Chart.Name }}-bucket-create-job
    spec:
      restartPolicy: Never
      imagePullSecrets:
      - name: registrysecret
      initContainers:
      - name: wait-minio
        image: alpine:3.6
        command: ['/bin/sh', '-c', 'while ! getent ahostsv4 {{ $minio_ep }}; do sleep 1; done']
      containers:
      - name: mc
        image: minio/mc
        command: ['sh', '-c', '--']
        args:
        - "mc mb -p {{ $minio_bucket }}; mc policy set public {{ $minio_bucket }}"
        env:
        - name: MC_HOST_default
          value: {{ printf "http://%s:%s@%s:%d" $minio_access_key $minio_secret_key $minio_ep $minio_port | quote }}
